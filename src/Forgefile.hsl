include ~/toolsets/gcc/gcc-app.hsl
include Utils.hsl

local var sources type list;
local var additional_includes type list;
local var compiler_flags type list;
local var additional_libraries type list;
local var library_flags type list;
local var binary_name type string;
local var dependency_chain type string;

project CP-8 : toolset "gcc-c-app" : dependencies $dependency_chain : $sources,
                                                                      $additional_includes,
                                                                      $compiler_flags,
                                                                      $additional_libraries,
                                                                      $library_flags,
                                                                      $binary_name;


CP-8.prologue() {
    $sources = get_codes($sources, $dependency_chain);
    $additional_includes.add_item(hefesto.sys.pwd());

    $binary_name = "cp8";
    if (hefesto.sys.os_name() == "windows") {
        $binary_name = $binary_name + ".exe";
    }
}

CP-8.epilogue() {
    if (hefesto.sys.last_forge_result() == 0) {
        hefesto.sys.echo("=== BUILT!\n");
        forge_tests();
    } else {
        hefesto.sys.echo("~~~ NOT BUILT...\n");
    }
}

local function forge_tests() : result type none {
    var oldcwd type string;
    $oldcwd = hefesto.sys.pwd();

    if (hefesto.sys.cd("tst")) {
        hefesto.sys.forge("CP8-tests", "Forgefile.hsl", "--obj-output-dir=obj --bin-output-dir=bin");
        hefesto.sys.cd($oldcwd);
    }

    if (hefesto.sys.last_forge_result() != 0) {
        hefesto.project.abort(1);
    }
}
